{"version":3,"sources":["file://cloudcmd/webpack/bootstrap","file://cloudcmd/client/modules/edit.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","promisify","require","tryToCatch","createElement","load","loadJS","js","maxSize","MAX_FILE_SIZE","time","timeEnd","CloudCmd","Element","editor","EditorName","config","Loading","ConfigView","afterShow","moveCursorTo","focus","initConfig","options","arguments","undefined","_objectSpread","fn","Error","checkFn","getEditor","init","_asyncToGenerator","element","style","notAppend","View","loadFiles","show","setOptions","fontSize","getElement","hide","_ref2","prefix","concat","socketPath","prefixSocket","url","Name","word","ed","_slicedToArray","_x","this"],"mappings":"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","file":"./modules/edit.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([80,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* global CloudCmd */\n\n'use strict';\n\nconst {promisify} = require('es6-promisify');\nconst tryToCatch = require('try-to-catch/legacy');\nconst createElement = require('@cloudcmd/create-element');\nconst load = require('load.js');\nconst loadJS = promisify(load.js);\n\nconst {MAX_FILE_SIZE: maxSize} = require('../../common/cloudfunc');\nconst {time, timeEnd} = require('../../common/util');\n\nconst Name = 'Edit';\n\nCloudCmd[Name] = exports;\n\nconst EditorName = CloudCmd.config('editor');\n\nlet Loading = true;\nlet Element;\nlet editor;\n\nconst ConfigView = {\n    afterShow: () => {\n        editor\n            .moveCursorTo(0, 0)\n            .focus();\n    },\n};\n\nmodule.exports.init = async () => {\n    const element = create();\n    \n    await CloudCmd.View();\n    await loadFiles(element);\n};\n\nfunction create() {\n    const element = createElement('div', {\n        style:\n            'width      : 100%;' +\n            'height     : 100%;' +\n            'font-family: \"Droid Sans Mono\";',\n        notAppend: true,\n    });\n    \n    Element = element;\n    \n    return element;\n}\n\nfunction checkFn(name, fn) {\n    if (typeof fn !== 'function')\n        throw Error(name + ' should be a function!');\n}\n\nfunction initConfig(options = {}) {\n    const config = {\n        ...options,\n        ...ConfigView,\n    };\n    \n    if (!options.afterShow)\n        return config;\n    \n    checkFn('options.afterShow', options.afterShow);\n    \n    const afterShow = {config};\n    \n    config.afterShow = () => {\n        afterShow();\n        options.afterShow();\n    };\n    \n    return config;\n}\n\nmodule.exports.show = (options) => {\n    if (Loading)\n        return;\n    \n    CloudCmd.View.show(Element, initConfig(options));\n    \n    getEditor()\n        .setOptions({\n            fontSize: 16,\n        });\n};\n\nmodule.exports.getEditor = getEditor;\n\nfunction getEditor() {\n    return editor;\n}\n\nmodule.exports.getElement = () => {\n    return Element;\n};\n\nmodule.exports.hide = () => {\n    CloudCmd.View.hide();\n};\n\nconst loadFiles = async (element) => {\n    const prefix = `${CloudCmd.prefix}/${EditorName}`;\n    const socketPath = CloudCmd.prefix;\n    const prefixSocket = `${CloudCmd.prefixSocket}/${EditorName}`;\n    const url = `${prefix}/${EditorName}.js`;\n    \n    time(Name + ' load');\n    \n    await loadJS(url);\n    \n    const word = promisify(window[EditorName]);\n    const [ed] = await tryToCatch(word, element, {\n        maxSize,\n        prefix,\n        prefixSocket,\n        socketPath,\n    });\n    \n    timeEnd(Name + ' load');\n    editor = ed;\n    Loading = false;\n};\n\n"],"sourceRoot":""}